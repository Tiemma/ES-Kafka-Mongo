version: "2"
services:
  elasticsearch :
    image: elasticsearch:2.0.0
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    # depends_on:
    #   - elasticsearch-plugin-install
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    volumes:
      - ./es2/data:/usr/share/elasticsearch/data/
      - ./es2/plugins/:/usr/share/elasticsearch/plugins/
    ports:
      - 9200:9200
      - 9300:9300

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:5.5.3
  #   container_name: elasticsearch
  #   environment:
  #     - cluster.name=docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     # - xpack.security.enabled=false
  #     - "elasticsearch.cluster1.xpack.security.enabled: false"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   mem_limit: 1g
  #   volumes:
  #     # - ./es5/data:/usr/share/elasticsearch/data
  #     # - ./es5/plugins/:/usr/share/elasticsearch/plugins/
  #     - ./es2/data/elasticsearch:/usr/share/elasticsearch/data
  #     - ./es5/plugins/:/usr/share/elasticsearch/plugins/
  #     - ./docker-entrypoint.sh:/docker-entrypoint.sh
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   # depends_on:
  #   #   - elasticsearch-plugin-install
      
  # elasticsearch-plugin-install:
  #   image:  docker.elastic.co/elasticsearch/elasticsearch:5.5.3
  #   command: "bash /docker-plugin-install.sh repository-s3 &"
  #   volumes:
  #     - ./es5/plugins/:/usr/share/elasticsearch/plugins/
  #     - ./docker-plugin-install.sh:/docker-plugin-install.sh
 
  # mongo :
  #   image: "mongo:latest"
  #   container_name: mongo
  #   ports:
  #     - 27017:27017

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092

  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    links:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181 
      SCHEMA_REGISTRY_HOST_NAME: schema-registry 
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - 8081:8081

  kafka-rest: 
    image: confluentinc/cp-kafka-rest
    container_name: kafka-rest
    depends_on:
      - schema-registry
    links:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181 
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082 
      KAFKA_REST_SCHEMA_REGISTRY_URL: schema-registry:8081 
      KAFKA_REST_HOST_NAME: kafka-rest 
    ports:
      - 8082:8082

  kafka-control:
    image: confluentinc/cp-enterprise-control-center
    container_name: kafka-control
    ports: 
      - 9021:9021 
    # volumes:
    #   - "/tmp/control-center/data:/var/lib/confluent-control-center"
    links:
      - kafka-connect
    depends_on:
      - kafka-connect
    environment:
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181 
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092 
      CONTROL_CENTER_REPLICATION_FACTOR: 1 
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1 
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1 
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 2 
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
  
  kafka-connect:
    image: confluentinc/cp-kafka-connect
    container_name: kafka-connect
    depends_on:
      - kafka
      - schema-registry
    links:
      - kafka
      - schema-registry
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092 
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "quickstart" 
      CONNECT_CONFIG_STORAGE_TOPIC: "quickstart-config" 
      CONNECT_OFFSET_STORAGE_TOPIC: "quickstart-offsets" 
      CONNECT_STATUS_STORAGE_TOPIC: "quickstart-status" 
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter" 
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter" 
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter" 
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter" 
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost   
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR 
      CONNECT_PLUGIN_PATH: /usr/share/java 
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1    
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    ports:
      - 8083:8083

  simulator:
    image: python:3.5-slim
    entrypoint: /wait-for
    container_name: simulator
    links: 
      - schema-registry
      - kafka
    depends_on: 
      - schema-registry
      - kafka
    volumes: 
      - "./sim_tx_engine:/simulator"
      - "./wait-for/wait-for:/wait-for"
      - "./run-simulator.sh:/run-simulator.sh"
      # - "./simulator:/root/.local"
    command: kafka-rest:8082 -t 10000 -- '/run-simulator.sh'

  # Services automating data and schema recreation
  create-sinks:
    image: confluentinc/cp-kafka-connect
    entrypoint: /bin/bash
    container_name: create-sinks
    depends_on:
      - simulator
    links:
      - kafka-connect
      - elasticsearch
    volumes:
      - "./create-es-connect-service.sh:/create-es-connect-service.sh"
      - "./wait-for/wait-for:/wait-for"
    command: /wait-for kafka-connect:8083 -t 10000 -- '/create-es-connect-service.sh' 

  create-topic:
    image: confluentinc/cp-kafka:latest
    entrypoint: /bin/bash
    container_name: create-topic
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #Append more topics here if needed
      KAFKA_CREATE_TOPICS: "gritServer:1:1,grits_v1:1:1,quickstart-status:1:1,quickstart-offsets:1:1,quickstart-config:1:1" 
    links:
      - kafka-connect
      - zookeeper
    volumes:
      - "./create-topic.sh:/create-topic.sh"
      - "./wait-for/wait-for:/wait-for"
    command: /wait-for kafka-connect:8083 -t 10000 -- '/create-topic.sh' 

  # mongorestore:
  #   image: "mongo:latest"
  #   container_name: mongorestore
  #   depends_on:
  #     - mongo
  #   links: 
  #     - mongo
  #   volumes: 
  #     - "/dump:/dump" #Dump folder which past databases can be recovered from        
  #     - "./entrypoint.sh:/entrypoint.sh"
  #     - "./wait-for/wait-for:/wait-for"
  #   command: /wait-for mongo:27017 -t 10000 -- '/entrypoint.sh' 
  #   environment:
  #     DB_NAME: database #Change to suitable database name

  # elasticsearch-plugin-install:
  #   image: elasticsearch:2.0.0
  #   container_name: install_es_plugins
  #   command: "bash /docker-plugin-install.sh cloud-aws"
  #   volumes:
  #     - ./es2/data/:/usr/share/elasticsearch/data
  #     - ./es2/plugins/:/usr/share/elasticsearch/plugins
  #     - ./docker-plugin-install.sh:/docker-plugin-install.sh
    


